{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction useInventory() {\n  _s();\n  const [inventory, setInventory] = useState([]);\n\n  // Add an item to the inventory\n  const addItem = newItem => {\n    setInventory([...inventory, newItem]);\n  };\n\n  // Update an existing item\n  const updateItem = (name, updatedData) => {\n    setInventory(inventory.map(item => item.name === name ? {\n      ...item,\n      ...updatedData\n    } : item));\n  };\n\n  // Remove an item from the inventory\n  const removeItem = name => {\n    setInventory(inventory.filter(item => item.name !== name));\n  };\n\n  // Find an item by ID or name\n  const getItemById = id => {\n    return inventory.find(item => item.name === id) || null;\n  };\n\n  // Get all items (used in DisplayItems)\n  const getAllItems = () => inventory;\n\n  // Get items that are low in stock (e.g., quantity < 5)\n  const getLowStockItems = () => {\n    return inventory.filter(item => item.quantity < 5);\n  };\n\n  // Sort items by criteria (name, quantity, price)\n  const sortItems = criteria => {\n    const sorted = [...inventory].sort((a, b) => {\n      if (criteria === 'name') return a.name.localeCompare(b.name);\n      if (criteria === 'quantity') return a.quantity - b.quantity;\n      if (criteria === 'price') return a.price - b.price;\n      return 0;\n    });\n    setInventory(sorted);\n  };\n  return {\n    addItem,\n    updateItem,\n    removeItem,\n    getItemById,\n    getAllItems,\n    getLowStockItems,\n    sortItems\n  };\n}\n_s(useInventory, \"0z5p0+l3XpngDGgk80zVAt7On9k=\");\nexport default useInventory;","map":{"version":3,"names":["useState","useInventory","_s","inventory","setInventory","addItem","newItem","updateItem","name","updatedData","map","item","removeItem","filter","getItemById","id","find","getAllItems","getLowStockItems","quantity","sortItems","criteria","sorted","sort","a","b","localeCompare","price"],"sources":["C:/Users/arvin/projects/midterm-project/src/Inventory/UseInventory.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useInventory() {\r\n  const [inventory, setInventory] = useState([]);\r\n\r\n  // Add an item to the inventory\r\n  const addItem = (newItem) => {\r\n    setInventory([...inventory, newItem]);\r\n  };\r\n\r\n  // Update an existing item\r\n  const updateItem = (name, updatedData) => {\r\n    setInventory(\r\n      inventory.map(item =>\r\n        item.name === name ? { ...item, ...updatedData } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Remove an item from the inventory\r\n  const removeItem = (name) => {\r\n    setInventory(inventory.filter(item => item.name !== name));\r\n  };\r\n\r\n  // Find an item by ID or name\r\n  const getItemById = (id) => {\r\n    return inventory.find(item => item.name === id) || null;\r\n  };\r\n\r\n  // Get all items (used in DisplayItems)\r\n  const getAllItems = () => inventory;\r\n\r\n  // Get items that are low in stock (e.g., quantity < 5)\r\n  const getLowStockItems = () => {\r\n    return inventory.filter(item => item.quantity < 5);\r\n  };\r\n\r\n  // Sort items by criteria (name, quantity, price)\r\n  const sortItems = (criteria) => {\r\n    const sorted = [...inventory].sort((a, b) => {\r\n      if (criteria === 'name') return a.name.localeCompare(b.name);\r\n      if (criteria === 'quantity') return a.quantity - b.quantity;\r\n      if (criteria === 'price') return a.price - b.price;\r\n      return 0;\r\n    });\r\n    setInventory(sorted);\r\n  };\r\n\r\n  return {\r\n    addItem,\r\n    updateItem,\r\n    removeItem,\r\n    getItemById,\r\n    getAllItems,\r\n    getLowStockItems,\r\n    sortItems,\r\n  };\r\n}\r\n\r\nexport default useInventory;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMK,OAAO,GAAIC,OAAO,IAAK;IAC3BF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,OAAO,CAAC,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,WAAW,KAAK;IACxCL,YAAY,CACVD,SAAS,CAACO,GAAG,CAACC,IAAI,IAChBA,IAAI,CAACH,IAAI,KAAKA,IAAI,GAAG;MAAE,GAAGG,IAAI;MAAE,GAAGF;IAAY,CAAC,GAAGE,IACrD,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,UAAU,GAAIJ,IAAI,IAAK;IAC3BJ,YAAY,CAACD,SAAS,CAACU,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKA,IAAI,CAAC,CAAC;EAC5D,CAAC;;EAED;EACA,MAAMM,WAAW,GAAIC,EAAE,IAAK;IAC1B,OAAOZ,SAAS,CAACa,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKO,EAAE,CAAC,IAAI,IAAI;EACzD,CAAC;;EAED;EACA,MAAME,WAAW,GAAGA,CAAA,KAAMd,SAAS;;EAEnC;EACA,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOf,SAAS,CAACU,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACQ,QAAQ,GAAG,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAMC,SAAS,GAAIC,QAAQ,IAAK;IAC9B,MAAMC,MAAM,GAAG,CAAC,GAAGnB,SAAS,CAAC,CAACoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC3C,IAAIJ,QAAQ,KAAK,MAAM,EAAE,OAAOG,CAAC,CAAChB,IAAI,CAACkB,aAAa,CAACD,CAAC,CAACjB,IAAI,CAAC;MAC5D,IAAIa,QAAQ,KAAK,UAAU,EAAE,OAAOG,CAAC,CAACL,QAAQ,GAAGM,CAAC,CAACN,QAAQ;MAC3D,IAAIE,QAAQ,KAAK,OAAO,EAAE,OAAOG,CAAC,CAACG,KAAK,GAAGF,CAAC,CAACE,KAAK;MAClD,OAAO,CAAC;IACV,CAAC,CAAC;IACFvB,YAAY,CAACkB,MAAM,CAAC;EACtB,CAAC;EAED,OAAO;IACLjB,OAAO;IACPE,UAAU;IACVK,UAAU;IACVE,WAAW;IACXG,WAAW;IACXC,gBAAgB;IAChBE;EACF,CAAC;AACH;AAAClB,EAAA,CAvDQD,YAAY;AAyDrB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}