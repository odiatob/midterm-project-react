{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nfunction useInventory() {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [message, setMessage] = useState('');\n  const addItem = newItem => {\n    setInventory([...inventory, newItem]);\n    setMessage('The item was added to the inventory.');\n  };\n  const updateItem = (name, updatedData) => {\n    setInventory(inventory.map(item => item.name === name ? {\n      ...item,\n      ...updatedData\n    } : item));\n    setMessage('The item was updated in the inventory.');\n  };\n  const removeItem = name => {\n    setInventory(inventory.filter(item => item.name !== name));\n    setMessage('The item was removed from the inventory.');\n  };\n  const getItemById = id => {\n    return inventory.find(item => item.name === id) || null;\n  };\n  const getAllItems = () => inventory;\n  const getLowStockItems = () => {\n    return inventory.filter(item => item.quantity < 5);\n  };\n  const sortItems = criteria => {\n    const sorted = [...inventory].sort((a, b) => {\n      if (criteria === 'name') return a.name.localeCompare(b.name);\n      if (criteria === 'quantity') return a.quantity - b.quantity;\n      if (criteria === 'price') return a.price - b.price;\n      return 0;\n    });\n    setInventory(sorted);\n    setMessage(`Items sorted by ${criteria}.`);\n  };\n  const clearMessage = () => {\n    setMessage('');\n  };\n  return {\n    inventory,\n    message,\n    addItem,\n    updateItem,\n    removeItem,\n    getItemById,\n    getAllItems,\n    getLowStockItems,\n    sortItems,\n    clearMessage\n  };\n}\n_s(useInventory, \"u5Rs76fZhF11qIsOxIuORT/R1aA=\");\nexport default useInventory;","map":{"version":3,"names":["useState","useInventory","_s","inventory","setInventory","message","setMessage","addItem","newItem","updateItem","name","updatedData","map","item","removeItem","filter","getItemById","id","find","getAllItems","getLowStockItems","quantity","sortItems","criteria","sorted","sort","a","b","localeCompare","price","clearMessage"],"sources":["C:/Users/arvin/projects/midterm-project/src/Inventory/UseInventory.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nfunction useInventory() {\r\n  const [inventory, setInventory] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const addItem = (newItem) => {\r\n    setInventory([...inventory, newItem]);\r\n    setMessage('The item was added to the inventory.');\r\n  };\r\n\r\n  const updateItem = (name, updatedData) => {\r\n    setInventory(\r\n      inventory.map(item =>\r\n        item.name === name ? { ...item, ...updatedData } : item\r\n      )\r\n    );\r\n    setMessage('The item was updated in the inventory.');\r\n  };\r\n\r\n  const removeItem = (name) => {\r\n    setInventory(inventory.filter(item => item.name !== name));\r\n    setMessage('The item was removed from the inventory.');\r\n  };\r\n\r\n  const getItemById = (id) => {\r\n    return inventory.find(item => item.name === id) || null;\r\n  };\r\n\r\n  const getAllItems = () => inventory;\r\n\r\n  const getLowStockItems = () => {\r\n    return inventory.filter(item => item.quantity < 5);\r\n  };\r\n\r\n  const sortItems = (criteria) => {\r\n    const sorted = [...inventory].sort((a, b) => {\r\n      if (criteria === 'name') return a.name.localeCompare(b.name);\r\n      if (criteria === 'quantity') return a.quantity - b.quantity;\r\n      if (criteria === 'price') return a.price - b.price;\r\n      return 0;\r\n    });\r\n    setInventory(sorted);\r\n    setMessage(`Items sorted by ${criteria}.`);\r\n  };\r\n\r\n  const clearMessage = () => {\r\n    setMessage('');\r\n  };\r\n\r\n  return {\r\n    inventory,\r\n    message,\r\n    addItem,\r\n    updateItem,\r\n    removeItem,\r\n    getItemById,\r\n    getAllItems,\r\n    getLowStockItems,\r\n    sortItems,\r\n    clearMessage,\r\n  };\r\n}\r\n\r\nexport default useInventory;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMO,OAAO,GAAIC,OAAO,IAAK;IAC3BJ,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEK,OAAO,CAAC,CAAC;IACrCF,UAAU,CAAC,sCAAsC,CAAC;EACpD,CAAC;EAED,MAAMG,UAAU,GAAGA,CAACC,IAAI,EAAEC,WAAW,KAAK;IACxCP,YAAY,CACVD,SAAS,CAACS,GAAG,CAACC,IAAI,IAChBA,IAAI,CAACH,IAAI,KAAKA,IAAI,GAAG;MAAE,GAAGG,IAAI;MAAE,GAAGF;IAAY,CAAC,GAAGE,IACrD,CACF,CAAC;IACDP,UAAU,CAAC,wCAAwC,CAAC;EACtD,CAAC;EAED,MAAMQ,UAAU,GAAIJ,IAAI,IAAK;IAC3BN,YAAY,CAACD,SAAS,CAACY,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKA,IAAI,CAAC,CAAC;IAC1DJ,UAAU,CAAC,0CAA0C,CAAC;EACxD,CAAC;EAED,MAAMU,WAAW,GAAIC,EAAE,IAAK;IAC1B,OAAOd,SAAS,CAACe,IAAI,CAACL,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKO,EAAE,CAAC,IAAI,IAAI;EACzD,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAMhB,SAAS;EAEnC,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,OAAOjB,SAAS,CAACY,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACQ,QAAQ,GAAG,CAAC,CAAC;EACpD,CAAC;EAED,MAAMC,SAAS,GAAIC,QAAQ,IAAK;IAC9B,MAAMC,MAAM,GAAG,CAAC,GAAGrB,SAAS,CAAC,CAACsB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC3C,IAAIJ,QAAQ,KAAK,MAAM,EAAE,OAAOG,CAAC,CAAChB,IAAI,CAACkB,aAAa,CAACD,CAAC,CAACjB,IAAI,CAAC;MAC5D,IAAIa,QAAQ,KAAK,UAAU,EAAE,OAAOG,CAAC,CAACL,QAAQ,GAAGM,CAAC,CAACN,QAAQ;MAC3D,IAAIE,QAAQ,KAAK,OAAO,EAAE,OAAOG,CAAC,CAACG,KAAK,GAAGF,CAAC,CAACE,KAAK;MAClD,OAAO,CAAC;IACV,CAAC,CAAC;IACFzB,YAAY,CAACoB,MAAM,CAAC;IACpBlB,UAAU,CAAC,mBAAmBiB,QAAQ,GAAG,CAAC;EAC5C,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBxB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,OAAO;IACLH,SAAS;IACTE,OAAO;IACPE,OAAO;IACPE,UAAU;IACVK,UAAU;IACVE,WAAW;IACXG,WAAW;IACXC,gBAAgB;IAChBE,SAAS;IACTQ;EACF,CAAC;AACH;AAAC5B,EAAA,CA5DQD,YAAY;AA8DrB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}